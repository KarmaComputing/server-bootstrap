---
- name: Install and configure L2TP IPsec vpn client on Ubuntu 22.04
  hosts: "{{ vpn_servers | default('vpn_servers') }}"
  become: yes
  vars:
    wireguard_dir: "/etc/wireguard/"

  tasks:

    - name: Install strongswan and xl2tpd
      apt:
        name: ['strongswan', 'xl2tpd']
        state: present
        update_cache: true

    - name: Configure xl2tpd.conf
      copy:
        dest: "/etc/xl2tpd/xl2tpd.conf"
        content: |
          [lac testvpn]
          lns = {{ vpn_server_ip }}
          ppp debug = yes
          pppoptfile = /etc/ppp/options.l2tpd.client
          length bit = yes

    - name: Edit options.l2tpd.client
      copy:
        dest: "/etc/ppp/options.l2tpd.client"
        content: |
          ipcp-accept-local
          ipcp-accept-remote
          refuse-eap
          require-chap
          noccp
          noauth
          mtu 1280
          mru 1280
          noipdefault
          defaultroute
          usepeerdns
          debug
          lock
          connect-delay 5000
          name {{ vpn_user }}
          password {{ vpn_pass }}
        mode: '0600'

    - name: Ensure xl2tpd control directory exists
      file:
        path: "/var/run/xl2tpd"
        state: directory

    - name: Ensure l2tp-control exists
      file:
        path: "/var/run/xl2tpd/l2tp-control"
        state: touch

    - name: Configure ipsec.conf
      copy:
        dest: "/etc/ipsec.conf"
        content: |
          config setup

          conn %default
            ikelifetime=60m
            keylife=20m
            rekeymargin=3m
            keyingtries=1
            keyexchange=ikev1
            authby=secret
            ike=aes128-sha1-modp2048!
            esp=aes128-sha1-modp2048!
           
          conn testvpn
            keyexchange=ikev1
            left=%defaultroute
            auto=add
            authby=secret
            type=transport
            leftprotoport=17/1701
            rightprotoport=17/1701
            right={{ vpn_server_ip }}

    - name: Add the IPSec Secret
      copy:
        dest: "/etc/ipsec.secrets"
        content: "{{ local_ip_gateway }} {{ vpn_server_ip }} : PSK \"{{ pre_shared_key }}\""

    - name: Restart strongswan and xl2tpd services
      service:
        name: "{{ item }}"
        state: restarted
      loop:
        - strongswan-starter
        - xl2tpd

    - name: Establish the VPN Connection
      shell:
        cmd: "{{ item }}"
      loop:
        - ipsec up testvpn
        - 'echo "c testvpn" > /var/run/xl2tpd/l2tp-control'
        - sleep 10

    - name: Route the traffic
      command: ip route add 10.100.49.2/32 via 10.100.49.10

    - name: Ensure IP forwarding is enabled permanently
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^#?net.ipv4.ip_forward'
        line: 'net.ipv4.ip_forward=1'
        state: present

    - name: Reload sysctl to apply changes
      command: sysctl -p
      changed_when: false

    - name: Set DNS
      command: resolvectl dns eth0 8.8.8.8 8.8.8.8

    - name: Install wireguard
      apt:
        name: ['wireguard']
        state: latest
        update_cache: true
      tags: [ wireguard ]

    - name: Ensure {{ wireguard_dir }} directory exists
      file:
        path: "{{ wireguard_dir }}"
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Generate laptop-private.key
      command: wg genkey
      register: laptop_private_key
      # command always generates new key but doesn't change system state
      changed_when: false
      tags: [ wireguard ]


    - name: Save laptop-private.key to file
      copy:
        content: "{{ laptop_private_key.stdout }}"
        dest: "{{ wireguard_dir }}laptop-private.key"
        mode: '0600'
      tags: [ wireguard ]


    - name: Generate laptop-public.key
      shell: wg pubkey < {{ wireguard_dir }}laptop-private.key > {{ wireguard_dir }}laptop-public.key
      # command always generates new key but doesn't change system state
      changed_when: false
      tags: [ wireguard ]

    - name: Register laptop-public.key
      command: cat {{ wireguard_dir }}laptop-public.key
      register: laptop_public_key
      # command always generates new key but doesn't change system state
      changed_when: false
      tags: [ wireguard ]


    - name: Generate router-private.key
      command: wg genkey
      register: router_private_key
      # command always generates new key but doesn't change system state
      changed_when: false
      tags: [ wireguard ]


    - name: Save router-private.key to file
      copy:
        content: "{{ router_private_key.stdout }}"
        dest: "{{ wireguard_dir }}router-private.key"
        mode: '0600'
      tags: [ wireguard ]


    - name: Generate router-public.key
      shell: wg pubkey < {{ wireguard_dir }}router-private.key > {{ wireguard_dir }}router-public.key
      # command always generates new key but doesn't change system state
      changed_when: false
      tags: [ wireguard ]

    - name: Template wg0.conf to {{ wireguard_dir }}
      ansible.builtin.template:
        src: wg0.conf.j2
        dest: "{{ wireguard_dir }}wg0.conf"
        owner: root
        group: root
        mode: '0600'
      tags: [ wireguard ]


    - name: Register router-public.key
      command: cat {{ wireguard_dir }}router-public.key
      register: router_public_key
      # command always generates new key but doesn't change system state
      changed_when: false
      tags: [ wireguard ]

    - name: Template client config
      become: yes
      template:
       src: wg-client.conf.j2
       dest: "{{ wireguard_dir }}wg-client.conf"
      tags: [ wireguard ]

    - name: Template save-vpn-credentials-to-password-vault.sh
      template:
       src: save-vpn-credentials-to-password-vault.sh
       dest: "{{ wireguard_dir }}save-vpn-credentials-to-password-vault.sh"
       owner: root
       group: root
       mode: '0700'
      tags: [ wireguard ]

    - name: Start the wg0 wireguard tunnel
      command: wg-quick up wg0
      tags: [ wireguard ]

    - name: Template add-vpn-user.sh to {{ wireguard_dir }}
      ansible.builtin.template:
        src: add-vpn-user.sh
        dest: "{{ wireguard_dir }}add-vpn-user.sh"
        owner: root
        group: root
        mode: '0700'
      tags: [ wireguard ]


    - name: Install psonoci
      shell: curl https://get.psono.com/psono/psono-ci/x86_64-linux/psonoci --output /usr/bin/psonoci && chmod +x /usr/bin/psonoci
      changed_when: false
